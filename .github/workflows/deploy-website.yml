name: Deploy Website to Firebase on merge

on:
  push:
    # Every push to main branch, kick off this GitHub Action
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install python dependencies
        run: |
          pip install csscompressor

      - name: Minify CSS files with Python script
        run: python Python-Utils/File-Utils/css-minify.py

      - name: Remove Unnecessary Files From Build
        run: |
          rm -rf .git*       
          rm -rf .github # Remove GitHub Actions files and folders
          rm -rf README* 
          rm -rf LICENSE* 
          rm -rf ./*/*.md  
          rm -rf ./*/*.png # We use the webp for images, not pngs!
          rm -rf **/*.py # Python files are just for utils, not for the actual site
          rm -rf **/*.pyc 
          rm -rf .DS_Store # Remove macOS specific hidden files
          rm -rf **/Generic-Game-Blueprint

      - name: Create Deploy Directory
        run: mkdir deploy

      - name: Copy Files to Deploy Directory
        run: rsync -av * deploy/

      - name: Navigate to Deploy Directory
        run: cd deploy

      - name: Insert Google Analytics Tracking Code
        run: |
          # Get the Google Analytics tracking ID from GitHub secrets
          GA_TRACKING_ID=$GA_TRACKING_ID_SECRET

          # Find all HTML files in the deploy directory
          HTML_FILES=$(find . -type f -name "*.html")

          # Retrieve cookiesEnabled value from localStorage
          COOKIES_ENABLED=$(localStorage.getItem('cookiesEnabled'))

          # Iterate over each HTML file
          for FILE in $HTML_FILES; do
            # Check if the file contains a <head> element
            if grep -q "<head>" "$FILE"; then
                # Insert the Google Analytics tracking code after the <head> element
                sed -i '/<head>/a\
                <!-- Google tag (gtag.js) -->\
                <script async src="https://www.googletagmanager.com/gtag/js?id='"$GA_TRACKING_ID"'"></script>\
                <script>\
                window.dataLayer = window.dataLayer || [];\
                function gtag(){dataLayer.push(arguments);}\
                gtag("js", new Date());\
                gtag("config", "'"$GA_TRACKING_ID"'");\
                </script>\
                ' "$FILE"

                # Insert logic to disable tracking if cookies are not enabled
                if [ "$COOKIES_ENABLED" = "false" ]; then
                  sed -i '/<script>/a\
                  window["ga-disable-'$GA_TRACKING_ID'"] = true;' "$FILE"
                else
                  sed -i '/<script>/a\
                  window["ga-disable-'$GA_TRACKING_ID'"] = false;' "$FILE"
                fi
            else
                echo "Warning: $FILE does not contain a <head> element. Skipping."
            fi
          done
        env:
          GA_TRACKING_ID_SECRET: ${{secrets.GA_TRACKING_ID}}

      - name: Deploy Site + Functions to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BLACK_HOLE_REJECT }}
          channelId: live
          projectId: black-hole-reject
