/* Import constants */
@import "./main-website-styles.css";
@import "/Shared-General-Assets/css/general-shared-constants.css";

/* Define variables */
:root {
  /* Transformations */

  /* Sizes */
  --content-search-button-height: 6vh;
  --content-search-button-width: 6vh;
  --content-search-icon-size: 4vh;
  --content-search-bar-width: 50%;

  /* Edge Margins */
  --content-search-container-left-margin: 3%;
  --content-search-button-left-margin: 6vw;
  --content-search-button-top-margin: 20%;
  --content-search-container-bottom-margin: 40px;
}

/* Media query to override CONSTANT values for vertical screens (portrait orientation) */
@media screen and (orientation: portrait), (max-width: 600px) {
  :root {
    /* Transformations */

    /* Sizes */
    --content-search-button-height: 6vh;
    --content-search-button-width: 10vw;
    --content-search-icon-size: 3vh;
    --content-search-bar-width: 55%;

    /* Edge Margins */
    --content-search-container-left-margin: 3%;
    --content-search-button-left-margin: 6vw;
    --content-search-button-top-margin: 20%;
    --content-search-container-bottom-margin: 20px;
  }
}

/* Define DERIVED variables (aka ones based on others) */
:root {
  /* Sizes */

  /* Font Sizes */
  --content-search-button-text-font-size: calc(
    var(--content-search-button-height) * 0.24
  );
}

/* Content search bar container styling */
.content-search-container {
  margin: 10px 0px var(--content-search-container-bottom-margin) 0px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px; /* Space between the search bar and button */
  width: 100%; /* Make container take full width */
}

/* Content search bar styling */
.content-search-bar {
  height: var(--content-search-button-height);
  width: var(--content-search-bar-width);
  padding: 10px;
  box-sizing: border-box; /* Ensure padding is included in the width */
}

.content-search-bar::placeholder {
  color: #999;
}

/* Content search bar button styling */
.content-search-button-container {
  width: var(--content-search-button-width);
  height: var(--content-search-button-height);
  display: flex;
  align-items: center; /* Center the button vertically with the search bar */
}

.content-search-button {
  position: absolute;
  width: var(--content-search-button-width);
  height: var(--content-search-button-height);
  border: none;
  background-color: transparent;
  color: transparent;
  transition: transform 0.3s ease;
  cursor: pointer;
  pointer-events: auto;
}

/* Only hover if the browser supports hover. Aka
  if this has a mouse. This prevents an issue where
  touchscreens are causing hover to get stuck */
@media (hover: hover) {
  .content-search-button:hover {
    transform: scale(1.2);
  }
}

/* What to do when clicked. Check the actual JS that adds an
  event listener to add and delete this CSS style on click */
.content-search-button.active {
  transform: scale(1.2);
  filter: brightness(0.88) invert(17%);
}

.fas.fa-magnifying-glass {
  color: var(--main-text-color); /* Set the color of the icon */
  font-size: var(--content-search-icon-size); /* icon size */
}

/* Dropdown options */
.content-dropdown-container {
  position: relative;
  display: inline-block;
}

.content-dropdown-button {
  height: var(--content-search-button-height);
  background-color: var(--button-color);
  color: white;
  padding: 10px 30px 10px 14px;
  font-size: 12px;
  text-align: left;
  border: none;
  cursor: pointer;
  position: relative;
  max-width: 100px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Triange that appears after the text on the dropdown */
.content-dropdown-button::after {
  content: "";
  position: absolute;
  top: 50%;
  right: 10px;
  transform: translateY(-50%);
  width: 0;
  height: 0;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top: 5px solid white;
}

/* Only hover if the browser supports hover. Aka
if this has a mouse. This prevents an issue where
touchscreens are causing hover to get stuck */
@media (hover: hover) {
  .content-dropdown-button:hover {
    background-color: var(--button-hover-color);
    color: var(--main-text-color);
    cursor: pointer;
  }
}

/* What to do when clicked. Check the actual JS that adds an
event listener to add and delete this CSS style on click */
.content-dropdown-button.active {
  filter: brightness(0.8) invert(20%);
}

.content-dropdown-option {
  display: none; /* hidden by default */
  position: absolute;
  background-color: white;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  z-index: 1;
}

.content-dropdown-option a {
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
}

/* Only hover if the browser supports hover. Aka
if this has a mouse. This prevents an issue where
touchscreens are causing hover to get stuck */
@media (hover: hover) {
  .content-dropdown-option a:hover {
    background-color: var(--button-hover-color);
    color: rgb(214, 214, 214); /* off-white */
    cursor: pointer;
  }
}

/* What to do when clicked. Check the actual JS that adds an
event listener to add and delete this CSS style on click */
.content-dropdown-option a.active {
  filter: brightness(0.8) invert(20%);
}

.content-dropdown-show {
  display: block;
}
