/* Define CONSTANT variables */
:root {
  /* Sizes */
  --content-box-w: 90vw;
  --content-box-h: 20vw;
  --content-type-icon-size: 2vw;
  /* Edge Margins */
  --content-desc-container-ml: 50px;
  --title-link-anchor-mt: 14px;
  --title-link-anchor-ml: 10px;
  --content-desc-container-pl: 20px;
  --content-desc-container-pt: 10px;
  --content-title-ml: 15px;
}

/* Media query to override CONSTANT values for vertical screens (portrait orientation) */
@media screen and (orientation: portrait), (max-width: 600px) {
  :root {
    /* Sizes */
    --content-box-h: 36vw;
    --content-box-w: 95vw;
    --content-type-icon-size: 2.85vw;
    /* Edge Margins */
    --content-desc-container-ml: 10px;
    --title-link-anchor-mt: 2.5px;
    --title-link-anchor-ml: 5px;
    --content-desc-container-pl: 10px;
    --content-desc-container-pt: 5px;
    --content-title-ml: 8px;
  }
}

/* Define DERIVED variables (aka ones based on others) */
:root {
  /* Sizes */
  --content-button-w: calc(var(--content-box-w) / 3.3);
  --content-button-h: calc(var(--content-box-h) * 0.95);
  --content-desc-container-h: calc(var(--content-box-h) * 0.95);
  --content-box-mb: calc(var(--content-box-h) * 0.07);
  /* Font Sizes */
  --content-title-font-size: calc(var(--content-button-w) * 0.075);
  --content-description-text-font-size: calc(var(--content-button-w) * 0.072);
}

/* Media query to override DERIVED values for vertical screens (portrait orientation) */
@media screen and (orientation: portrait), (max-width: 600px) {
  :root {
    /* Font Sizes */
    --content-title-font-size: calc(var(--content-button-w) * 0.07);
    --content-description-text-font-size: calc(var(--content-button-w) * 0.07);
    /* Sizes */
    --content-button-w: calc(var(--content-box-w) / 2.3);
  }
}

/* content-box.js content box Styling */
.content-box {
  position: relative; /* Position this wherever (this is the origin for all content-box's children */
  height: var(--content-box-h);
  display: flex;
  align-items: center;
  margin: 0px var(--main-ml) var(--content-box-mb) var(--main-ml);
  gap: var(--content-desc-container-ml);
}

.content-box-button-container {
  width: var(--content-button-w);
  height: var(--content-button-h);
}

a.content-box-button-link-anchor {
  /* Add styles if needed */
}

.content-button {
  cursor: pointer;
  border-radius: var(--standard-border-radius);
  width: var(--content-button-w);
  height: var(--content-button-h);
  transition: transform 0.1s ease;
}

/* Only hover if the browser supports hover. Aka
if this has a mouse. This prevents an issue where
touchscreens are causing hover to get stuck */
.content-button-hover-effect {
  /* leave blank */
}
@media (hover: hover) {
  .content-button-hover-effect {
    transform: scale(1.05);
  }
}

/* What to do when clicked. Check the actual JS that adds an
event listener to add and delete this CSS style on click with addClickAnimation() */
.content-button-click-effect {
  transform: scale(1.05);
  filter: brightness(0.9) invert(10%);
}

.content-desc-container {
  position: relative;
  height: var(--content-desc-container-h);
  border-radius: var(--standard-border-radius);
  background-color: var(--panel-color);
  display: flex;
  flex-direction: column;
  padding: var(--content-desc-container-pl) var(--content-desc-container-pt)
    var(--content-desc-container-pt) var(--content-desc-container-pl);
  box-sizing: border-box;
}

a.title-link-anchor {
  margin: var(--title-link-anchor-mt) var(--title-link-anchor-ml)
    var(--title-link-anchor-mt) var(--title-link-anchor-ml);
  text-decoration: none;
  display: flex;
  justify-content: flex-start; /* Align items at the start (left) */
  align-items: center;
  min-height: 26px;
}

.content-title {
  position: relative;
  margin: 0px 0px 0px var(--content-title-ml);
  font-size: var(--content-title-font-size);
  text-align: left;
  color: var(--main-text-color);
  white-space: nowrap;
  font-weight: bold;
  /* For some reason the text doesnt sit right if I dont do this */
  line-height: 1;
}

/* Only hover if the browser supports hover. Aka
if this has a mouse. This prevents an issue where
touchscreens are causing hover to get stuck */
.content-title-hover-effect {
  /* leave blank */
}
@media (hover: hover) {
  .content-title-hover-effect {
    text-decoration: underline;
    cursor: pointer;
  }
}

/* What to do when clicked. Check the actual JS that adds an
event listener to add and delete this CSS style on click with addClickAnimation() */
.content-title-click-effect {
  filter: brightness(0.9) invert(10%);
  text-decoration: underline;
}

.content-description-text {
  font-size: var(--content-description-text-font-size);
  text-align: left;
  color: var(--main-text-color);
  font-weight: normal;
  width: var(--content-desc-text-width);
  margin: var(--title-link-anchor-mt) var(--title-link-anchor-ml)
    var(--title-link-anchor-mt) var(--title-link-anchor-ml);
}

.no-results-found-text {
  font-size: 15pt;
  text-align: center;
  color: var(--main-text-color);
  font-weight: normal;
}

.fas.fa-gamepad,
.fas.fa-paint-brush,
.fas.fa-pen-nib {
  margin: 0px 0px 0px 0px;
  color: #ffffff;
  font-size: var(--content-type-icon-size);
}
