/* Import constants */
@import "../../../Shared-General-Assets/css/general-shared-constants.css";

/* Define variables */
:root {
  /* Edge Margins */
  --updateTilegrid-button-margin-left: 6vw;
  --updateTilegrid-button-margin-bottom: 13vh;
  --resetTilegrid-button-margin-left: 6vw;
  --resetTilegrid-button-margin-bottom: 30vh;
  --input-box-1-margin-left: 0vw;
  --input-box-2-margin-left: 8vw;
  --input-box-3-margin-left: 16vw;
  --input-box-label-margin-top: -5vh;
  --difficulty-selection-box-container-left: 14vw;
  --difficulty-selection-box-container-bottom: 6vh;
  --sol-toggle-box-margin-left: 14vw;
  --sol-toggle-box-margin-bottom: 23vh;
  --flip-tile-info-button-margin-right: 6vw;
  --flip-tile-info-button-margin-bottom: 13vh;
  --flip-tile-info-header-x-button-margin-left: 95%;
  --flip-tile-info-header-x-button-margin-top: 5%;
  --score-text-top: 10%;
  /* Font */
  --flip-tile-text-size: calc(10vw * 0.15);
  --flip-tile-label-text-size: calc(10vw * 0.12);
  --score-text-size: calc(10vh * 0.8);
  /* Font Sizes */
  --test-font-size: calc(10vw * 0.2);
  /* Sizes */
  --fliptile-button-width: calc(10vw * 0.6);
  --fliptile-button-height: calc(10vh * 0.8);
  --selection-box-width: calc(10vw * 0.5);
  --selection-box-height: calc(10vh * 0.5);
}

/* Media query to override CONSTANT values for vertical screens (portrait orientation) */
@media screen and (orientation: portrait), (max-width: 600px) {
  :root {
    /* Edge Margins */
    --updateTilegrid-button-margin-left: 16vw;
    --updateTilegrid-button-margin-bottom: 11vh;
    --resetTilegrid-button-margin-left: 16vw;
    --resetTilegrid-button-margin-bottom: 20vh;
    --input-box-1-margin-left: 0vw;
    --input-box-2-margin-left: 17vw;
    --input-box-3-margin-left: 34vw;
    --input-box-label-margin-top: -3vh;
    --difficulty-selection-box-container-left: 36vw;
    --difficulty-selection-box-container-bottom: 6vh;
    --sol-toggle-box-margin-left: 36vw;
    --sol-toggle-box-margin-bottom: 15vh;
    --flip-tile-info-button-margin-right: 16vw;
    --flip-tile-info-button-margin-bottom: 29vh;
    --flip-tile-info-header-x-button-margin-left: 90%;
    --flip-tile-info-header-x-button-margin-top: 5%;
    --score-text-top: 15%;
    /* Font */
    --flip-tile-text-size: calc(10vh * 0.2);
    --flip-tile-label-text-size: calc(10vh * 0.15);
    --score-text-size: calc(10vh * 0.75);
    /* Font Sizes */
    --test-font-size: calc(10vw * 0.38);
    /* Sizes */
    --fliptile-button-width: calc(20vw * 0.85);
    --fliptile-button-height: calc(10vh * 0.43);
    --selection-box-width: calc(10vw * 0.55);
    --selection-box-height: calc(10vh * 0.55);
  }
}

/* Main page attributes, such as background, font, etc. */
@font-face {
  font-family: MyCustomFont;
  src: url("../../../Shared-General-Assets/fonts/Ronysiswadi15Bold-6YAwY.ttf")
    format("truetype");
  font-weight: bold;
}
@font-face {
  font-family: MyCustomFont;
  src: url("../../../Shared-General-Assets/fonts/Ronysiswadi15-51Dv8.ttf")
    format("truetype");
  font-weight: normal;
}

body {
  font-family: MyCustomFont, sans-serif;
  /* Background-related styles for body are defined in the .html file since they are urgent and we want to guarentee those render in */
}

/* Define style for link */
a {
  color: var(--link-color);
  text-decoration: none; /* Remove the underline */
}

/* Only hover if the browser supports hover. Aka
if this has a mouse. This prevents an issue where
touchscreens are causing hover to get stuck */
@media (hover: hover) {
  a:hover {
    text-decoration: underline; /* Add underline on hover */
  }
}

/* What to do when clicked. Check the actual JS that adds an
event listener to add and delete this CSS style on click */
a.active {
  text-decoration: underline; /* Add underline on click */
}

/* Buttons */
.updateTilegrid-button-container {
  position: fixed;
  left: var(--updateTilegrid-button-margin-left);
  bottom: var(--updateTilegrid-button-margin-bottom);
}

.resetTilegrid-button-container {
  position: fixed;
  left: var(--resetTilegrid-button-margin-left);
  bottom: var(--resetTilegrid-button-margin-bottom);
}

.fliptile-button {
  position: absolute;
  width: var(--fliptile-button-width);
  height: var(--fliptile-button-height);
  border: none;
  background-color: transparent;
  color: var(--main-color);
  font-size: var(--flip-tile-text-size);
  transform: translate(-50%, 0%);
  transition: transform 0.3s ease;
  cursor: pointer;
  pointer-events: auto;
}

/* Only hover if the browser supports hover. Aka
if this has a mouse. This prevents an issue where
touchscreens are causing hover to get stuck */
@media (hover: hover) {
  .fliptile-button:hover {
    transform: translate(-50%, 0%) scale(1.2);
  }
}

/* What to do when clicked. Check the actual JS that adds an
event listener to add and delete this CSS style on click */
.fliptile-button.active {
  transform: translate(-50%, 0%) scale(1.2);
  filter: brightness(0.8);
}

.fliptile-icon-img,
.fliptile-icon-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: transform 0.3s ease;
}

.fliptile-icon-text {
  color: var(--secondary-color);
  font-weight: bold;
}

.fliptile-icon-img {
  width: 100%;
  height: 100%;
}

/* Score text */
.score-text-container {
  position: relative;
}

.score-text {
  position: absolute;
  top: var(--score-text-top);
  left: 50%;
  transform: translate(-50%, -50%);
  color: var(--main-text-color);
  font-size: var(--score-text-size);
  font-weight: bold;
  transition: transform 0.2s ease-in-out;
}

.score-text-grow {
  transform: translate(-50%, -50%) scale(1.2); /* Grow the text */
}

/* All Selection Boxes */
input[type="checkbox" i] {
  background-color: initial;
  cursor: default;
  appearance: auto;
  box-sizing: border-box;
  margin: 0px;
  padding: initial;
  border: initial;
}

/* Difficulty Selection Boxes */
.difficulty-selection-box-container {
  position: fixed;
  left: var(--difficulty-selection-box-container-left);
  bottom: var(--difficulty-selection-box-container-bottom);
  width: var(--selection-box-width);
  height: var(--selection-box-height);
}

.input-box-1,
.input-box-2,
.input-box-3 {
  position: absolute;
  width: var(--selection-box-width);
  height: var(--selection-box-height);
  cursor: pointer;
  transform: translate(-50%, 0%);
}

.input-box-1 {
  left: var(--input-box-1-margin-left);
}

.input-box-2 {
  left: var(--input-box-2-margin-left);
}

.input-box-3 {
  left: var(--input-box-3-margin-left);
}

.input-box-label-1,
.input-box-label-2,
.input-box-label-3 {
  position: absolute;
  color: var(--main-text-color);
  font-size: var(--flip-tile-label-text-size);
  text-align: center;
  transform: translate(-25%, 0%);
}

.input-box-label-1 {
  left: var(--input-box-1-margin-left);
  top: var(--input-box-label-margin-top);
}

.input-box-label-2 {
  left: var(--input-box-2-margin-left);
  top: var(--input-box-label-margin-top);
}

.input-box-label-3 {
  left: var(--input-box-3-margin-left);
  top: var(--input-box-label-margin-top);
}

/* Toggle box styles */
.sol-toggle-box-container {
  left: var(--sol-toggle-box-margin-left);
  bottom: var(--sol-toggle-box-margin-bottom);
  position: fixed;
  width: var(--selection-box-width);
  height: var(--selection-box-height);
}

.sol-toggle-label {
  position: absolute;
  transform: translate(-50%, 0%);
  top: var(--input-box-label-margin-top);
  font-size: var(--flip-tile-label-text-size);
  white-space: nowrap;
  color: white;
}

.sol-toggle-input {
  position: absolute;
  width: var(--selection-box-width);
  height: var(--selection-box-height);
  cursor: pointer;
  transform: translate(-50%, 0%);
}

/* Info screen styles */
.info-button-container {
  position: fixed;
  right: var(--flip-tile-info-button-margin-right);
  bottom: var(--flip-tile-info-button-margin-bottom);
}

/* Phone screen has it in a different location */
@media screen and (orientation: portrait), (max-width: 600px) {
  .info-button-container {
    position: fixed;
    left: var(--flip-tile-info-button-margin-right);
    bottom: var(--flip-tile-info-button-margin-bottom);
  }
}

.info-box {
  display: none; /* Hide this to start */
  position: absolute;
  top: 0%;
  left: 0%;
  width: 100%;
  height: 100%;
  background-color: var(--panel-color);
  pointer-events: auto;
}

.info-header {
  position: relative;
  left: var(--flip-tile-info-header-x-button-margin-left);
  top: var(--flip-tile-info-header-x-button-margin-top);
  font-size: var(--test-font-size);
  color: var(--main-text-color);
  pointer-events: auto;
}

.info-content {
  position: absolute;
  padding: 4vw;
  left: var(--main-left-margin);
  top: 0%;
  font-size: var(--test-font-size);
  color: var(--main-text-color);
  pointer-events: auto;
}

.close-button {
  position: absolute;
  cursor: pointer;
  pointer-events: auto;
  transform: scale(1.6);
  transition: transform 0.3s ease;
}

/* Only hover if the browser supports hover. Aka
if this has a mouse. This prevents an issue where
touchscreens are causing hover to get stuck */
@media (hover: hover) {
  .close-button:hover {
    transform: scale(2.2);
  }
}

/* What to do when clicked. Check the actual JS that adds an
event listener to add and delete this CSS style on click */
.close-button.active {
  transform: scale(2.2);
  filter: brightness(0.8) invert(25%);
}
