/* Define CONSTANT variables */
:root {
  /* Size */
  --bb-input-slider-w: 15vw;
  --bb-input-slider-h: 5vh;
  --bb-slider-container-mt: 3vh;
  --bb-toggle-box-container-mt: 4vh;
  --bb-leader-toggle-size: calc(10vw * 0.2);
  /* Margins */
  --bb-slider-hover-label-mr: -115%;
  --bb-input-ml: 70%;
  /* Translations */
  --bb-slider-label-mt: 0%;
  /* Font Sizes */
  --bb-slider-font-size: calc(10vw * 0.14);
}

/* Media query to override CONSTANT values for vertical screens (portrait orientation) */
@media screen and (orientation: portrait), (max-width: 600px) {
  :root {
    /* Size */
    --bb-input-slider-w: 28.5vw;
    --bb-slider-container-mt: 5vh;
    --bb-toggle-box-container-mt: 2.5vh;
    --bb-leader-toggle-size: calc(10vh * 0.25);
    /* Margins */
    --bb-input-ml: 0%;
    --bb-slider-hover-label-mr: 0%;
    /* Translations */
    --bb-slider-label-mt: -43%;
    /* Font Sizes */
    --bb-slider-font-size: calc(10vw * 0.35);
  }
}

html,
body {
  /* Hide both horizontal and vertical scroll bars 
  and prevent player from scrolling on accident on phone
  for example */
  overflow: hidden;
  height: 100%;
}

body {
  position: relative; /* ABOVE SCROLL PREVENTION DOES NOT WORK IF THIS IS NOT RELATIVE ... idk why see this https://stackoverflow.com/questions/10592411/disable-scrolling-in-all-mobile-devices */
}

.ui-settings-options-container {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  flex-direction: column;
  margin: 0px 0px 0px 5%;
}

.slider-container {
  position: relative;
  pointer-events: none;
  height: var(--bb-input-slider-h);
  width: var(--bb-input-slider-w);
  display: flex;
  justify-content: center;
  align-items: center;
  margin: var(--bb-slider-container-mt) 0px 0px 0px;
}

.slider-label {
  position: absolute;
  left: 0;
  pointer-events: none;
  font-size: var(--bb-slider-font-size);
  white-space: nowrap;
  color: white;
}

/* iPhone only! */
@media screen and (orientation: portrait), (max-width: 600px) {
  .slider-label {
    top: var(--bb-slider-label-mt);
  }
}

.slider-hover-label {
  position: absolute;
  right: var(--bb-slider-hover-label-mr);
  display: none; /* Hide the label until we hover on it below */
  font-size: var(--bb-slider-font-size);
  white-space: nowrap;
  color: white;
}

/* iPhone only! */
@media screen and (orientation: portrait), (max-width: 600px) {
  .slider-hover-label {
    top: var(--bb-slider-label-mt);
  }
}

/* DONT do the @media (hover: hover) thing for fixing hovering */
/*  on phone here. This is because we like how on the phone the 
hover label for the slider gets stuck when a player holds it.
Theres a tiny side effect of making the value persist but thats
fine since theyre likely to tap elsewjere to fix it soon after. */
.slider-container:hover .slider-hover-label {
  display: block; /* Show the hover label when hovering over the slider container */
}

/* for touching on phone (see the eventListenerAdding that needs to occur in boid-settings.js for this to work) */
.touch-hover .slider-hover-label {
  display: block;
}

input[type="range"] {
  left: var(--bb-input-ml);
  position: absolute;
  cursor: pointer;
  pointer-events: auto; /* Can click on this */
  height: var(--bb-input-slider-h);
  width: var(--bb-input-slider-w);
}

/* Define styles for when the slider is being interacted with */
input[type="range"]:active {
  transform: scale(1.18); /* Increase the scale of the slider */
}

/* Toggle box styles */
.toggle-box-container {
  height: var(--bb-input-slider-h);
  display: flex;
  align-items: center;
  position: relative;
  align-content: center;
  flex-wrap: wrap;
  justify-content: flex-start;
  margin: var(--bb-toggle-box-container-mt) 0px 0px 0px;
}

.toggle-label {
  margin-left: calc(var(--bb-leader-toggle-size) * 0.5);
  font-size: var(--bb-slider-font-size);
  white-space: nowrap;
  color: white;
}

.toggle-input {
  width: var(--bb-leader-toggle-size);
  height: var(--bb-leader-toggle-size);
  cursor: pointer;
}
