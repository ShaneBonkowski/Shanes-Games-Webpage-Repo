/* Import constants */
@import "./main-website-styles.css";
@import "/Shared-General-Assets/css/general-shared-constants.css";

/* Define variables */
:root {
  /* Transformations */
  --header-button-separation: 120%;
  --header-button-vertical-translation: 65%;
  --sub-title-translate-x: 180%;
  /* Sizes */
  --header-height: 8vw;
  --footer-height: 14vw;
  /* Edge Margins */
  --title-container-left-margin: 3%;
  --footer-text-left-margin: 50%;
  --footer-text-top-margin: 30%;
  --left-button-right-margin: 18vw;
  --middle-button-right-margin: 10vw;
  --right-button-right-margin: 2vw;
  --linkedIn-button-right-margin: 6vw;
  --linkedIn-button-bottom-margin: 20%;
  --header-button-margin-left-right: 10px;
  --content-button-margin-right: 20px;
}

/* Media query to override CONSTANT values for vertical screens (portrait orientation) */
@media screen and (orientation: portrait), (max-width: 600px) {
  :root {
    /* Transformations */
    --sub-title-translate-x: 162%;
    /* Sizes */
    --header-height: 14.4vw;
    --footer-height: 25.2vw;
    /* Edge Margins */
    --left-button-right-margin: 34vw;
    --middle-button-right-margin: 19vw;
    --right-button-right-margin: 4vw;
    --linkedIn-button-right-margin: 6vw;
    --linkedIn-button-bottom-margin: 20%;
    --header-button-margin-left-right: 5px;
    --content-button-margin-right: 15px;
  }
}

/* Define DERIVED variables (aka ones based on others) */
:root {
  /* Sizes */
  --logo-image-size: calc(var(--header-height) * (2 / 3));
  --linkedin-button-width: calc(var(--footer-height) * 0.8);
  --linkedin-button-height: calc(var(--footer-height) * 0.3);
  --header-button-width: calc(var(--header-height) * 0.83);
  --header-button-height: calc(var(--header-height) * 0.45);
  --github-icon-size: calc(var(--header-height) * 0.2);
  --title-text-font-size: calc(var(--header-height) * 0.25);
  --subtitle-text-font-size: calc(var(--header-height) * 0.125);
  --header-margin-bottom: calc(var(--header-height) * 0.18);
  /* Font Sizes */
  --linkedin-icon-size: calc(var(--linkedin-button-height) * 0.45);
  --footer-main-text-font-size: calc(var(--footer-height) * 0.125);
  --header-button-text-size: calc(var(--header-button-width) * 0.16);
  --linkedin-text-font-size: calc(var(--linkedin-button-height) * 0.24);
}

/* header.js styling */
.header-banner {
  position: relative; /* Position this wherever (this is the origin for all of this obj's children */
  background-color: var(--hide-color); /*Banner color*/
  color: var(--main-text-color); /*Text color on the banner*/
  width: 100%;
  height: var(--header-height);
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--header-margin-bottom);
}

.title-container {
  position: relative;
  pointer-events: auto; /* Can click this to go back to main menu */
  cursor: pointer; /* hover pointer */
  transition: transform 0.3s ease;
  margin: 8px 0px 0px 0px;
  left: var(--title-container-left-margin);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

/* Only hover if the browser supports hover. Aka
if this has a mouse. This prevents an issue where
touchscreens are causing hover to get stuck */
@media (hover: hover) {
  .title-container:hover {
    transform: scale(1.05);
  }
}

/* What to do when clicked. Check the actual JS that adds an
event listener to add and delete this CSS style on click with addClickAnimation() */
.title-container.active {
  transform: scale(1.05);
  filter: brightness(0.82) invert(0%);
}

.logo-image {
  border-radius: var(--standard-edge_radius);
  width: var(--logo-image-size);
  height: var(--logo-image-size);
}

h1.title-text-style {
  color: var(--main-text-color);
  white-space: nowrap;
  text-align: left;
  font-size: var(--title-text-font-size);
  font-weight: bold;
  margin: 0px 0px 0px 8px;
}

.sub-title-text {
  color: var(--main-text-color);
  white-space: nowrap;
  text-align: right;
  font-size: var(--subtitle-text-font-size);
  font-weight: normal;
  margin: 3px 0px 0px 0px;
}

/* Header button styling */
.header-buttons-parent {
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.header-button-container {
  position: relative;
  width: var(--header-button-width);
  height: var(--header-button-height);
  background-color: var(--button-color); /* Button Color */
  border-radius: var(--standard-edge_radius);
  transition: background-color 0.3s ease;
  text-align: center;
}

/* Only hover if the browser supports hover. Aka
if this has a mouse. This prevents an issue where
touchscreens are causing hover to get stuck */
@media (hover: hover) {
  .header-button-container:hover {
    background-color: var(--button-hover-color);
    color: var(--main-text-color);
    cursor: pointer;
  }
}

/* What to do when clicked. Check the actual JS that adds an
event listener to add and delete this CSS style on click with addClickAnimation() */
.header-button-container.active {
  filter: brightness(0.8) invert(20%);
}

.header-button-text {
  position: absolute;
  color: var(--main-text-color);
  text-align: center;
  top: var(--general-top-margin);
  left: var(--general-left-margin);
  font-size: var(--header-button-text-size);
  font-weight: normal;
  white-space: nowrap;
}

/* github button styling */
.github-button-container {
  position: relative;
  right: 0;
  margin: 0px var(--header-button-margin-left-right) 0px
    var(--header-button-margin-left-right);
}

.github-text {
  transform: translate(-20%, var(--centering-translation));
}

.fab.fa-github {
  position: absolute;
  color: #ffffff; /* Set the color of the GitHub icon */
  font-size: var(
    --github-icon-size
  ); /* Called font, but its really the size of the GitHub icon */
  top: var(--general-top-margin);
  left: var(--general-left-margin);
  transform: translate(-185%, calc(var(--centering-translation) - 5%));
}

/* about me button styling */
.about-me-button-container {
  position: relative;
  right: 0;
  margin: 0px var(--header-button-margin-left-right) 0px
    var(--header-button-margin-left-right);
}

.about-me-text {
  transform: translate(
    var(--centering-translation),
    var(--centering-translation)
  );
}

/* home button styling */
.home-button-container {
  position: relative;
  right: 0;
  margin: 0px var(--content-button-margin-right) 0px
    var(--header-button-margin-left-right);
}

.home-text {
  transform: translate(
    var(--centering-translation),
    var(--centering-translation)
  );
}

/* footer.js Styling */
.footer-banner {
  position: relative; /* Position this wherever (this is the origin for all of this obj's children */
  background-color: var(--hide-color); /*Banner color*/
  color: var(--main-text-color); /*Text color on the banner*/
  width: 100%;
  height: var(--footer-height);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.footer-main-text {
  position: absolute;
  font-size: var(--footer-main-text-font-size);
  text-align: center;
  color: var(--main-text-color);
  left: var(--footer-text-left-margin);
  top: var(--footer-text-top-margin);
  font-weight: normal;
  transform: translate(
    var(--centering-translation),
    var(--centering-translation)
  );
  width: 100%;
  white-space: pre-wrap; /* Preserve newline characters */
  display: block;
  line-height: 1;
}

.footer-main-text a {
  color: var(--link-color);
  text-decoration: none; /* Remove the underline */
}

/* Only hover if the browser supports hover. Aka
if this has a mouse. This prevents an issue where
touchscreens are causing hover to get stuck */
@media (hover: hover) {
  .footer-main-text a:hover {
    text-decoration: underline; /* Add underline on hover */
  }
}

/* What to do when clicked. Check the actual JS that adds an
event listener to add and delete this CSS style on click with addClickAnimation() */
.footer-main-text a.active {
  text-decoration: underline; /* Add underline on click */
}

.flex-grow-for-footer {
  flex-grow: 1;
}

/* LinkedIn footer button styling */
.linkedIn-button-container {
  position: absolute;
  width: var(--linkedin-button-width);
  height: var(--linkedin-button-height);
  background-color: var(--button-color); /* Button Color */
  border-radius: var(--standard-edge_radius);
  transition: background-color 0.3s ease;
  text-align: center;
  right: var(--linkedIn-button-right-margin);
  bottom: var(--linkedIn-button-bottom-margin);
  position: absolute;
}

/* Only hover if the browser supports hover. Aka
if this has a mouse. This prevents an issue where
touchscreens are causing hover to get stuck */
@media (hover: hover) {
  .linkedIn-button-container:hover {
    background-color: var(--button-hover-color);
    color: var(--main-text-color);
    cursor: pointer;
  }
}

/* What to do when clicked. Check the actual JS that adds an
event listener to add and delete this CSS style on click with addClickAnimation() */
.linkedIn-button-container.active {
  filter: brightness(0.8) invert(20%);
}

.linkedIn-text {
  position: absolute;
  color: var(--main-text-color);
  text-align: center;
  top: var(--general-top-margin);
  left: var(--general-left-margin);
  transform: translate(-20%, var(--centering-translation));
  font-size: var(--linkedin-text-font-size);
  font-weight: normal;
}

.linkedIn-button-link {
  position: absolute;
}

.fab.fa-linkedin {
  position: absolute;
  color: #ffffff; /* Set the color of the GitHub icon */
  font-size: var(--linkedin-icon-size); /* icon size */
  top: var(--general-top-margin);
  left: var(--general-left-margin);
  transform: translate(-195%, calc(var(--centering-translation) - 8%));
}
